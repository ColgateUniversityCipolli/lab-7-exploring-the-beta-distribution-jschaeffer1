ylab("Density")
#Plot 3 (skew)
skew.plot = ggplot() +
geom_hline(yintercept=skew1) +
theme_bw() +
ylab("Density")
#Plot 4 (kurtosis)
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1) +
theme_bw() +
ylab("Density")
var.plot
skew.plot
kurt.plot
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1) +
theme_bw() +
ylab("Density") +
title("Kurtosis")
#Plot 4 (kurtosis)
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1) +
theme_bw() +
ylab("Density") +
labs("Kurtosis")
kurt.plot
kurt.plot
kurt.plot
#Plot 4 (kurtosis)
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1) +
theme_bw() +
ylab("Density") +
ggtitle("Kurtosis")
kurt.plot
#Plot 1 (mean)
mean.plot = ggplot() +
geom_hline(yintercept=mean1) +
theme_bw() +
ylab("Density") +
ggtitle("Mean")
#Plot 2 (Variance)
var.plot = ggplot() +
geom_hline(yintercept=sd1) +
theme_bw() +
ylab("Density") +
ggtitle("Variance")
#Plot 3 (skew)
skew.plot = ggplot() +
geom_hline(yintercept=skew1) +
theme_bw() +
ylab("Density") +
ggtitle("Skewness")
#Plot 4 (kurtosis)
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1) +
theme_bw() +
ylab("Density") +
ggtitle("Kurtosis")
#Making for loop to simulate data
for (i in 2:50){
set.seed(7272+i)
sample = sample_func(500,2,5)
#Calculating cumulative values
mean = mean(sample)
variance = var(sample)
skewness = skewness(sample)
kurtosis = kurtosis(sample)
#Adding values to original plots
mean.plot <- mean.plot +
geom_hline(yintercept=mean, color=i)
}
mean.plot
kurt.plot
library(cumstats)
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
plot(cummean(rnorm(1000,3,2)))
?cummean
?cumvar
?cumskewness
?cumskew
?cumkurt
mean = cummean(sample)
variance = cumvar(sample)
skewness = cumskew(sample)
kurtosis = cumkurt(sample)
mean
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Kurtosis")
kurt.plot
view(mean)
mean.plot <- mean.plot +
geom_line(data = mean, aes(x=x, y=y), color=i)
mean.plot
mean.plot = ggplot() +
geom_hline(yintercept=mean1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size")
ggtitle("Mean")
mean.plot
mean.plot <- mean.plot +
geom_line(data = mean, aes(x=x, y=y), color=i)
mean.plot
class(mean)
mean_df <- tibble(
x = seq_along(mean),  # Row numbers
y = mean  # Vector values
)
mean.plot <- mean.plot +
geom_line(data = mean_df, aes(x=x, y=y), color=i)
mean.plot
mean.plot <- mean.plot +
geom_line(data = mean_df, aes(x=x, y=y), color=i)
var.plot <- var.plot +
geom_line(data = var_df, aes(x=x, y=y), color=i)
mean_df <- tibble(x = seq_along(mean), y = mean)
var_df <- tibble(x = seq_along(variance), y = mean)
skew_df <- tibble(x = seq_along(skewness), y = mean)
kurt_df <- tibble(x = seq_along(kurtosis), y = mean)
#Adding values to original plots
mean.plot <- mean.plot +
geom_line(data = mean_df, aes(x=x, y=y), color=i)
var.plot <- var.plot +
geom_line(data = var_df, aes(x=x, y=y), color=i)
skew.plot <- skew.plot +
geom_line(data = skew_df, aes(x=x, y=y), color=i)
kurt.plot <- kurt.plot +
geom_line(data = kurt_df, aes(x=x, y=y), color=i)
mean.plot
var.plot
skew.plot
kurt.plot
mean_df <- tibble(x = seq_along(mean), y = mean)
var_df <- tibble(x = seq_along(variance), y = variance)
skew_df <- tibble(x = seq_along(skewness), y = skewness)
kurt_df <- tibble(x = seq_along(kurtosis), y = kurtosis)
#Adding values to original plots
mean.plot <- mean.plot +
geom_line(data = mean_df, aes(x=x, y=y), color=i)
var.plot <- var.plot +
geom_line(data = var_df, aes(x=x, y=y), color=i)
skew.plot <- skew.plot +
geom_line(data = skew_df, aes(x=x, y=y), color=i)
kurt.plot <- kurt.plot +
geom_line(data = kurt_df, aes(x=x, y=y), color=i)
var.plot
#Making plots that will be added to
#Plot 1 (mean)
mean.plot = ggplot() +
geom_hline(yintercept=mean1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size")
ggtitle("Mean")
#Plot 2 (Variance)
var.plot = ggplot() +
geom_hline(yintercept=sd1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Variance")
#Plot 3 (skew)
skew.plot = ggplot() +
geom_hline(yintercept=skew1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Skewness")
#Plot 4 (kurtosis)
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Kurtosis")
mean.plot <- mean.plot +
geom_line(data = mean_df, aes(x=x, y=y), color=i)
var.plot <- var.plot +
geom_line(data = var_df, aes(x=x, y=y), color=i)
skew.plot <- skew.plot +
geom_line(data = skew_df, aes(x=x, y=y), color=i)
kurt.plot <- kurt.plot +
geom_line(data = kurt_df, aes(x=x, y=y), color=i)
mean.plot
var.plot
skew.plot
kurt.plot
#Making plots that will be added to
#Plot 1 (mean)
mean.plot = ggplot() +
geom_hline(yintercept=mean1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size")
ggtitle("Mean")
#Plot 2 (Variance)
var.plot = ggplot() +
geom_hline(yintercept=sd1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Variance")
#Plot 3 (skew)
skew.plot = ggplot() +
geom_hline(yintercept=skew1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Skewness")
#Plot 4 (kurtosis)
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1+3) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Kurtosis")
#Making for loop to simulate data
#for (i in 2:50){
set.seed(7272)
sample = sample_func(500,2,5)
#Calculating cumulative values
mean = cummean(sample)
variance = cumvar(sample)
skewness = cumskew(sample)
kurtosis = cumkurt(sample)
#Making dataframe for each value
mean_df <- tibble(x = seq_along(mean), y = mean)
var_df <- tibble(x = seq_along(variance), y = variance)
skew_df <- tibble(x = seq_along(skewness), y = skewness)
kurt_df <- tibble(x = seq_along(kurtosis), y = kurtosis)
#Adding values to original plots
mean.plot <- mean.plot +
geom_line(data = mean_df, aes(x=x, y=y), color=i)
var.plot <- var.plot +
geom_line(data = var_df, aes(x=x, y=y), color=i)
skew.plot <- skew.plot +
geom_line(data = skew_df, aes(x=x, y=y), color=i)
kurt.plot <- kurt.plot +
geom_line(data = kurt_df, aes(x=x, y=y), color=i)
kurt.plot
#Making plots that will be added to
#Plot 1 (mean)
mean.plot = ggplot() +
geom_hline(yintercept=mean1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size")
ggtitle("Mean")
#Plot 2 (Variance)
var.plot = ggplot() +
geom_hline(yintercept=sd1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Variance")
#Plot 3 (skew)
skew.plot = ggplot() +
geom_hline(yintercept=skew1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Skewness")
#Plot 4 (kurtosis)
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1+3) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Kurtosis")
#Making for loop to simulate data
for (i in 2:50){
set.seed(7272+i)
sample = sample_func(500,2,5)
#Calculating cumulative values
mean = cummean(sample)
variance = cumvar(sample)
skewness = cumskew(sample)
kurtosis = cumkurt(sample)
#Making dataframe for each value
mean_df <- tibble(x = seq_along(mean), y = mean)
var_df <- tibble(x = seq_along(variance), y = variance)
skew_df <- tibble(x = seq_along(skewness), y = skewness)
kurt_df <- tibble(x = seq_along(kurtosis), y = kurtosis)
#Adding values to original plots
mean.plot <- mean.plot +
geom_line(data = mean_df, aes(x=x, y=y), color=i)
var.plot <- var.plot +
geom_line(data = var_df, aes(x=x, y=y), color=i)
skew.plot <- skew.plot +
geom_line(data = skew_df, aes(x=x, y=y), color=i)
kurt.plot <- kurt.plot +
geom_line(data = kurt_df, aes(x=x, y=y), color=i)
}
kurt.plot
skew.plot
var.plot
warnings()
mean.plot
#Making plots that will be added to
#Plot 1 (mean)
mean.plot = ggplot() +
geom_hline(yintercept=mean1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Mean")
#Plot 2 (Variance)
var.plot = ggplot() +
geom_hline(yintercept=sd1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Variance")
#Plot 3 (skew)
skew.plot = ggplot() +
geom_hline(yintercept=skew1) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Skewness")
#Plot 4 (kurtosis)
kurt.plot = ggplot() +
geom_hline(yintercept=kurt1+3) +
theme_bw() +
ylab("Value") +
xlab("Sample Size") +
ggtitle("Kurtosis")
#Making for loop to simulate data
for (i in 2:50){
set.seed(7272+i)
sample = sample_func(500,2,5)
#Calculating cumulative values
mean = cummean(sample)
variance = cumvar(sample)
skewness = cumskew(sample)
kurtosis = cumkurt(sample)
#Making dataframe for each value
mean_df <- tibble(x = seq_along(mean), y = mean)
var_df <- tibble(x = seq_along(variance), y = variance)
skew_df <- tibble(x = seq_along(skewness), y = skewness)
kurt_df <- tibble(x = seq_along(kurtosis), y = kurtosis)
#Adding values to original plots
mean.plot <- mean.plot +
geom_line(data = mean_df, aes(x=x, y=y), color=i)
var.plot <- var.plot +
geom_line(data = var_df, aes(x=x, y=y), color=i)
skew.plot <- skew.plot +
geom_line(data = skew_df, aes(x=x, y=y), color=i)
kurt.plot <- kurt.plot +
geom_line(data = kurt_df, aes(x=x, y=y), color=i)
}
samplesize.comparison = (mean.plot | var.plot) / (skew.plot | kurt.plot)
samplesize.comparison
set.seed(7272+i)
sample = sample_func(500,2,5)
#Calculating statistical values
mean = mean(sample)
variance = variance(sample)
set.seed(7272+i)
sample = sample_func(500,2,5)
#Calculating statistical values
mean = mean(sample)
variance = var(sample)
skewness = skewness(sample)
kurtosis = kurtosis(sample)
i
#Making empty dataframe
statistic_df <- tibble(
mean = numeric(),
variance = numeric(),
skewness = numeric(),
kurtosis = numeric()
)
#Making a for loop for generating statistics
for(i in 1:1000){
set.seed(7272+i)
sample = sample_func(500,2,5)
#Calculating statistical values
mean = mean(sample)
variance = var(sample)
skewness = skewness(sample)
kurtosis = kurtosis(sample)
#Adding values to dataframe
statistic_df(i,) = c(mean, variance, skewness, kurtosis)
}
##############################################
####              TASK 5                  ####
##############################################
#Making empty dataframe
statistic_df <- tibble(
mean = numeric(),
variance = numeric(),
skewness = numeric(),
kurtosis = numeric()
)
#Making a for loop for generating statistics
for(i in 1:1000){
set.seed(7272+i)
sample = sample_func(500,2,5)
#Calculating statistical values
mean = mean(sample)
variance = var(sample)
skewness = skewness(sample)
kurtosis = kurtosis(sample)
#Adding values to dataframe
new_row = tibble(mean = mean, variance = variance, skewness =skewness, kurtosis = kurtosis)
statistic_df = bind_rows(statistic_df, new_row)
}
view(statistic_df)
view(sample.summaries)
view(statistic_summary)
statistic_summary = statistic_df |>
summarize(
mean_mean = mean(mean),
mean_variance = var(mean),
mean_skewness = skewness(mean),
mean_kurtosis = kurtosis(mean),
variance_mean = mean(variance),
variance_variance = var(variance),
variance_skewness = skewness(variance),
variance_kurtosis = kurtosis(variance),
skewness_mean = mean(skewness),
skewness_variance = var(skewness),
skewness_skewness = skewness(skewness),
skewness_kurtosis = kurtosis(skewness),
kurtosis_mean = mean(kurtosis),
kurtosis_variance = var(kurtosis),
kurtosis_skewness = skewness(kurtosis),
kurtosis_kurtosis = kurtosis(kurtosis)
)|>
#Reorganizing table
pivot_longer(cols = everything(), names_to = c("Variable", ".value"), names_sep = "_")
view(statistic_summary)
mean.plot.task5 = ggplot(statistic_df, aes(x = mean, y=after_stat(density))) + #Plotting sample data
geom_histogram(bins = 30) + #Histogram plot
geom_hline(yintercept=0)+ #Making y intercept line
theme_bw()
mean.plot.task5
###Plotting the graph
mean.plot.task5 = ggplot(statistic_df, aes(x = mean, y=after_stat(density))) + #Plotting sample data
geom_histogram(bins = 30) + #Histogram plot
geom_density()
geom_hline(yintercept=0)+ #Making y intercept line
theme_bw()
###Plotting the graph
mean.plot.task5 = ggplot(statistic_df, aes(x = mean, y=after_stat(density))) + #Plotting sample data
geom_histogram(bins = 30) + #Histogram plot
geom_density(aes(x=mean, y=y))
geom_hline(yintercept=0)+ #Making y intercept line
theme_bw()
###Plotting the graph
mean.plot.task5 = ggplot(statistic_df, aes(x = mean, y=after_stat(density))) + #Plotting sample data
geom_histogram(bins = 30) + #Histogram plot
geom_density(aes(x=mean))
geom_hline(yintercept=0)+ #Making y intercept line
theme_bw()
mean.plot.task5
###Plotting the graph
mean.plot.task5 = ggplot(statistic_df, aes(x = mean, y=after_stat(density))) + #Plotting sample data
geom_histogram(bins = 30) + #Histogram plot
geom_density() +
geom_hline(yintercept=0)+ #Making y intercept line
theme_bw()
mean.plot.task5
###Plotting the graphs
mean.plot.task5 = ggplot(statistic_df, aes(x = mean, y=after_stat(density))) + #Plotting sample data
geom_histogram(bins = 30) + #Histogram plot
geom_density() +
geom_hline(yintercept=0)+ #Making y intercept line
theme_bw()
var.plot.task5 = ggplot(statistic_df, aes(x = variance, y=after_stat(density))) + #Plotting sample data
geom_histogram(bins = 30) + #Histogram plot
geom_density() +
geom_hline(yintercept=0)+ #Making y intercept line
theme_bw()
skew.plot.task5 = ggplot(statistic_df, aes(x = skewness, y=after_stat(density))) + #Plotting sample data
geom_histogram(bins = 30) + #Histogram plot
geom_density() +
geom_hline(yintercept=0)+ #Making y intercept line
theme_bw()
kurt.plot.task5 = ggplot(statistic_df, aes(x = kurtosis, y=after_stat(density))) + #Plotting sample data
geom_histogram(bins = 30) + #Histogram plot
geom_density() +
geom_hline(yintercept=0)+ #Making y intercept line
theme_bw()
var.plot.task5
skew.plot.task5
kurt.plot.task5
